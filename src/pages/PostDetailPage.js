import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import axios from 'axios';
import Header from '../components/Header';

function PostDetailPage() {
    const { id } = useParams();
    const navigate = useNavigate();
    const [post, setPost] = useState(null);
    const [likesCount, setLikesCount] = useState(0);
    const [isLiked, setIsLiked] = useState(false);
    const [message, setMessage] = useState('');
    

    useEffect(() => {
      // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–∞ –∏ —Å—Ç–∞—Ç—É—Å–∞ –ª–∞–π–∫–∞
      axios.get(`http://localhost:8000/api/posts/${id}/`)
        .then(res => {
          setPost(res.data);
          setLikesCount(res.data.likes_count);
          setIsLiked(res.data.is_liked)
        })
        .catch(console.error);
    
      // –ó–∞—Å–µ—á—å –≤—Ä–µ–º—è —á—Ç–µ–Ω–∏—è + –≤—ã–∑–≤–∞—Ç—å TrackPostView –ø—Ä–∏ —É—Ö–æ–¥–µ
      const start = Date.now();
      const handleUnload = () => {
        const seconds = Math.round((Date.now() - start) / 1000);
        if (seconds < 8) return;
    
        const token = localStorage.getItem('access');
        fetch('http://localhost:8000/api/track/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            ...(token && { 'Authorization': `Bearer ${token}` })
          },
          body: JSON.stringify({ post_id: id, seconds })
        });
      };
    
      window.addEventListener('beforeunload', handleUnload);
      return () => {
        handleUnload();
        window.removeEventListener('beforeunload', handleUnload);
      };
    }, [id]);
    
    const toggleLike = () => {
      const token = localStorage.getItem('access');
      if (!token) {
      // –µ—Å–ª–∏ –Ω–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç
      setMessage('–ß—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç');
    }
      
      axios.post(`http://localhost:8000/api/posts/${id}/like/`, {}, {
        headers: { Authorization: `Bearer ${token}` }
      })
      .then(res => {
        setLikesCount(res.data.likes_count);
        setIsLiked(res.data.status === 'liked');
        setMessage('');  // —Å–±—Ä–æ—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –±—ã–ª–æ
      })
      .catch(console.error);
    };

    if (!post) return <p>–∑–∞–≥—Ä—É–∑–∫–∞...</p>;

    return (
        <>
          <Header />
          <div className="container py-5">
            <h1>{post.title}</h1>
            {post.cover && (
              <img
                src={post.cover}
                alt="–û–±–ª–æ–∂–∫–∞ –ø–æ—Å—Ç–∞"
                style={{ width: "100%", maxHeight: "400px", objectFit: "cover", marginBottom: "20px" }}
              />
            )}
            <p>{post.content}</p>

            <div className="d-flex justify-content-between align-items-center">
              <button
                className={`btn ${isLiked ? 'btn-danger' : 'btn-outline-danger'}`}
                onClick={toggleLike}
              >
                {isLiked ? '‚ù§Ô∏è ' : '‚ù§Ô∏è '} {likesCount}
              </button>
              <p className="text-muted mb-0">üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {post.views}</p>
            </div>
            {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
            {message && (
              <div className="alert alert-warning my-2">
                {message}&nbsp;
                {!localStorage.getItem('access') && (
                  <a href="/login" onClick={e => { e.preventDefault(); navigate('/login'); }}>
                    –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
                  </a>
                )}
              </div>
            )}
          </div>
        </>
      );
    }

export default PostDetailPage;